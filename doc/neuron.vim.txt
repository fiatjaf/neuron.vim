*neuron.vim.txt* Manage your Zettelkasten.

Author: fiatjaf <https://fiatjaf.alhur.es/>

INTRODUCTION                                    *neuron.vim*

neuron.vim manages your zettelkasten. You can search, create, navigate and open your zettels using fzf and neuron.

CONFIGURATION                                   *neuron.vim-configuration*
g:CustomNeuronIDGenerator   Hook function to define your own strategy for generating the
                            IDs of new Zettel notes. Accepts a string 'title' parameter,
                            and should return a string. If left undefined, neuron.vim will
                            generate random IDs for new notes. Default: >
                            undefined

g:neuron_backlinks_size     Size in characters used for backlinks window. Default: >
                            let g:neuron_backlinks_size = 40

g:neuron_backlinks_vsplit   If this is set to 1, backlinks will be shown in a vertical
                            split. Otherwise a horizontal split will be user. Default: >
                            let g:neuron_backlinks_vsplit = 1

g:neuron_backlinks_vsplit_right
                            If this is set to 1, backlinks will be shown in a vertical
                            split on the right, otherwise they will be on the left.
                            Default: >
                            let g:neuron_backlinks_vsplit_right = 1

g:neuron_dir                Zettelkasten location. Default: >
                            let g:neuron_dir = getcwd()

g:neuron_executable         Path to neuron. Default >
                            let g:neuron_executable = system('which neuron | tr -d "\n"')

g:neuron_extension          Zettel file extension. Default: >
                            let g:neuron_extension = '.md'


g:neuron_fullscreen_search  If fzf searches are to occupy the entire screen. Default: >
                            let g:neuron_fullscreen_search = 0

g:neuron_fzf_options        Change the fzf parameters. Default: >
                            let g:neuron_fzf_options = ['-d',':','--with-nth','2']

g:neuron_inline_backlinks   If set to 1, then inline backlinks will be shown at the
                            top of the buffer. Default: >
                            let g:neuron_inline_backlinks = 1

g:neuron_no_mappings        If this is set to 1 no mappings will be created. Default: >
                            let g:neuron_no_mappings = 0

MAPPINGS                                        *neuron.vim-mappings*
>
	nm gzn <Plug>EditZettelNew
	nm gzN <Plug>EditZettelNewFromCword
	vm gzN <esc><Plug>EditZettelNewFromVisual
	nm gzb <Plug>NeuronRibStart
	nm gzr <Plug>NeuronRefreshCache
	nm gzu <Plug>EditZettelLast
	nm gzU :<C-U>call neuron#move_history(-1)<cr>
	nm gzP :<C-U>call neuron#move_history(1)<cr>
	nm gzz <Plug>EditZettelSelect
	nm gzZ <Plug>EditZettelBacklink
	nm gzo <Plug>EditZettelUnderCursor
	nm gzs <Plug>EditZettelSearchContent
	nm gzS <Plug>EditZettelSearchContentUnderCursor
	nm gzl <Plug>InsertZettelLast
	nm gzi <Plug>InsertZettelSelect
	nm gzL :<C-U>call neuron#insert_zettel_last(1)<cr>
	nm gzI :<C-U>call neuron#insert_zettel_select(1)<cr>
	nm gzv <Plug>ToggleBacklinks

ABOUT                                           *neuron.vim-about*

http://github.com/fiatjaf/neuron.vim

vim:tw=78:et:ft=help:norl:
